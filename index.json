[{"categories":null,"contents":"git基础 最小配置，commit的时候需要配置 创建仓库, 工作区和暂存区，git log 新增的文件默认是不会被git管理 git reset \u0026ndash;hard 清除暂存 ; git log \u0026ndash;all \u0026ndash;graph -n4 \u0026ndash;oneline; gitk 图形化看log 探秘.git，commit,tree,blob的关系，head执行某个commit(分离头指针) 基于一个commit创建一个commit，文件夹是颗树，文件时blob(两个文件内容相同就是一个blob不看文件名) 独自试用git的使用场景 删除分支 git branch -d （ -D强制）；修改commit message(最近的一次 git commit \u0026ndash;amend) ;对以前的需要变基 git rebase -i 要拿父亲的commit （r是修改message s 合并 间隔的commit可以挪一下顺序）。 恢复暂存区 git reset HEAD 或者指定文件 恢复工作区 git checkout \u0026ndash; index.html 消除最近几次提交 git reset \u0026ndash;hard commitId; 任务加塞 git stash list apply不会丢 pop会丢弃 指定不需要git管理的文件, 在.gitignore文件指定; git仓库备份 git clone \u0026ndash;bare (不带工作区) git与github同步 先配公私钥，如果配过就直接用之前的；创建仓库后，在git中添加远程项目 git remote add github git@github.com:range17251101244/git_test.git 多人协作场景 公用一个分支 冲突解决的时候恢复回去的命令 git merge \u0026ndash;abort； 解决完的后记得push 一个修改文件名，一个修改文件内容，也会non fast for world 直接 git pull就行。同时改文件名会报冲突 git rm 不要的文件名 禁忌 强制push -f GitHub 淘项目 可以通过 help 搜索 search功能 github.io 搭建网页 团队协作 ","permalink":"https://rangerun.github.io/git-energy/git/","summary":"git基础 最小配置，commit的时候需要配置 创建仓库, 工作区和暂存区，git log 新增的文件默认是不会被git管理 git reset \u0026ndash;hard 清除暂存 ; git log \u0026ndash;all \u0026ndash;graph -n4 \u0026ndash;oneline; gitk 图形化看log 探秘.git，commit,tree,blob的关系，head执行某个commit(分离头指针) 基于一个commit创建一个commit，文件夹是颗树，文件时blob(两个文件内容相同就是一个blob不看文件名) 独自试用git的使用场景 删除分支 git branch -d （ -D强制）；修改commit message(最近的一次 git commit \u0026ndash;amend) ;对以前的需要变基 git rebase -i 要拿父亲的commit （r是修改message s 合并 间隔的commit可以挪一下顺序）。 恢复暂存区 git reset HEAD 或者指定文件 恢复工作区 git checkout \u0026ndash; index.html 消除最近几次提交 git reset \u0026ndash;hard commitId; 任务加塞 git stash list apply不会丢 pop会丢弃 指定不需要git管理的文件, 在.gitignore文件指定; git仓库备份 git clone \u0026ndash;bare (不带工作区) git与github同步 先配公私钥，如果配过就直接用之前的；创建仓库后，在git中添加远程项目 git remote add github git@github.","tags":null,"title":"git 使用心得"}]